/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package blogmanager.view;

import blogmanager.database.DatabaseOperations;
import blogmanager.genel.Utilities;
import blogmanager.model.Blog;
import blogmanager.model.BlogDetail;
import blogmanager.model.Comment;
import blogmanager.model.User;
import java.util.List;

/**
 *
 * @author Rahman Yazgan
 */
public class CreateNewCommentJDialog extends javax.swing.JDialog {
    
    private final Blog selectedBlog;
    private final DatabaseOperations databaseOperations;
    private List<User> userList;
    private String tempUser;
    private User selectedUser;
    private boolean commentCreated;

    /**
     * Creates new form CreateNewCommentJDialog
     *
     * @param parent
     * @param modal
     * @param blogDetail
     */
    public CreateNewCommentJDialog(java.awt.Frame parent, boolean modal, BlogDetail blogDetail) {
        super(parent, modal);
        initComponents();
        
        selectedBlog = blogDetail;
        
        this.setLocationRelativeTo(parent);
        databaseOperations = new DatabaseOperations();
        getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaCommentContent = new javax.swing.JTextArea();
        jComboBoxUserList = new javax.swing.JComboBox();
        jButtonCreateNewComment = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCommentTitle = new javax.swing.JTextField();

        setTitle("Yorum Yap");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Yorum :");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Yorum Sahibi :");

        jTextAreaCommentContent.setColumns(20);
        jTextAreaCommentContent.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jTextAreaCommentContent.setLineWrap(true);
        jTextAreaCommentContent.setRows(5);
        jTextAreaCommentContent.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextAreaCommentContent);

        jComboBoxUserList.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBoxUserList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxUserListItemStateChanged(evt);
            }
        });

        jButtonCreateNewComment.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonCreateNewComment.setText("Yorum Yap");
        jButtonCreateNewComment.setEnabled(false);
        jButtonCreateNewComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateNewCommentActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Yorum Başlığı :");

        jTextFieldCommentTitle.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonCreateNewComment, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(6, 6, 6)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxUserList, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCommentTitle)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextFieldCommentTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCreateNewComment, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCreateNewCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateNewCommentActionPerformed
        if (checkInformationPlaces()) {
            createNewComment();
        }
    }//GEN-LAST:event_jButtonCreateNewCommentActionPerformed

    private void jComboBoxUserListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxUserListItemStateChanged
        selectActiveUser();
        activateButton();
    }//GEN-LAST:event_jComboBoxUserListItemStateChanged

    private void getData() {
        getAllUsers();

        if (addUsers()) {
            this.setVisible(true);
        } else {
            this.setVisible(false);
        }
    }

    private void getAllUsers() {
        try {
            databaseOperations.getDBConnection();
            userList = databaseOperations.getAllUsers();
            databaseOperations.dbConnectionClose();
        } catch (Exception ex) {
            Utilities.showMessageBox("Hata: " + ex.getMessage(), "ERROR");
        }
    }

    private boolean addUsers() {
        if (userList != null) {
            if (userList.size() > 0) {

                jComboBoxUserList.addItem("Seçiniz");

                for (User user : userList) {
                    if (user.getAccessPermission().equals("A")
                            || user.getAccessPermission().equals("Y")) {
                        jComboBoxUserList.addItem(user.getUserName()
                                + " <" + user.getEmail() + ">");
                    }
                }
                return true;
            }
        }
        return false;
    }

    private boolean checkInformationPlaces() {
        if (jTextFieldCommentTitle.getText().trim().length() == 0) {
            Utilities.showMessageBox("Yorum başlığı boş olamaz.", "ERROR");
            return false;
        }
        
        if (jTextAreaCommentContent.getText().trim().length() == 0) {
            Utilities.showMessageBox("Yorum içeriği boş olamaz.", "ERROR");
            return false;
        }

        if (jComboBoxUserList.getSelectedItem().toString().equals("Seçiniz")) {
            Utilities.showMessageBox("Bir kullanıcı seçiniz.", "ERROR");
            return false;
        }

        return true;
    }

    private void createNewComment() {
        Comment comment = new Comment();
        comment.setBlogID(selectedBlog.getBlogID());
        comment.setUserID(selectedUser.getUserID());
        System.out.println(selectedUser.getUserName());
        comment.setUserName(selectedUser.getUserName());
        comment.setCommentTitle(jTextFieldCommentTitle.getText());
        comment.setCommentContent(jTextAreaCommentContent.getText());
        comment.setCommentDate(Utilities.createNewTimestamp());

        try {
            databaseOperations.getDBConnection();
            databaseOperations.createComment(comment);
            databaseOperations.dbConnectionClose();

            Utilities.showMessageBox("Yorum oluşturuldu.", "INFORMATION");
            commentCreated = true;
        } catch (Exception ex) {
            Utilities.showMessageBox("Hata2: " + ex.getMessage(), "ERROR");
            commentCreated = false;
        }

        clearForm();
    }

    public boolean isCommentCreated() {
        return commentCreated;
    }

    private void clearForm() {
        jTextFieldCommentTitle.setText("");
        jTextAreaCommentContent.setText("");
        jComboBoxUserList.setSelectedIndex(0);
        selectedUser = null;
    }

    private void activateButton() {
        if (jComboBoxUserList.getSelectedIndex() > 0) {
            jButtonCreateNewComment.setEnabled(true);
        } else {
            jButtonCreateNewComment.setEnabled(false);
        }
    }

    private void selectActiveUser() {
        if (userList != null) {
            tempUser = jComboBoxUserList.getSelectedItem().toString();

            for (User user : userList) {
                if (tempUser.contains(user.getEmail())) {
                    selectedUser = user;
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCreateNewComment;
    private javax.swing.JComboBox jComboBoxUserList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextAreaCommentContent;
    private javax.swing.JTextField jTextFieldCommentTitle;
    // End of variables declaration//GEN-END:variables
}
