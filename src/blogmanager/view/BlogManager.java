/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package blogmanager.view;

import blogmanager.database.DatabaseOperations;
import blogmanager.genel.Utilities;
import blogmanager.model.Blog;
import blogmanager.model.BlogDetail;
import blogmanager.model.Comment;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author <a href="mailto:rahmanyazgan@gmail.com">Rahman Yazgan</a>
 */
public class BlogManager extends javax.swing.JFrame {

    private static final String METAL_LOOK_AND_FEEL = "javax.swing.plaf.metal.MetalLookAndFeel";
    private static final String NIMBUS_LOOK_AND_FEEL = "javax.swing.plaf.nimbus.NimbusLookAndFeel";
    private static final String WINDOWS_LOOK_AND_FEEL = "com.sun.java.swing.plaf.windows.WindowsLookAndFeel";
    private static final String WINDOWS_CLASSIC_LOOK_AND_FEEL = "com.sun.java.swing.plaf.windows.WindowsClassicLookAndFeel";
    
    private final DatabaseOperations databaseOperations;
    
    private String lookAndFeel;
    private String selectedItem;
    private List<Blog> blogList;
    private List<Comment> commentList;
    private BlogDetail selectedBlogDetail;

    /**
     * Creates new form BlogManager
     */
    public BlogManager() {
        initComponents();
        
        databaseOperations = new DatabaseOperations();
        getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelBlogInformation = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaBlogTitle = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabelOwner = new javax.swing.JLabel();
        jLabelCreatedDate = new javax.swing.JLabel();
        jLabelArticleCount = new javax.swing.JLabel();
        jLabelCommentCount = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaBlogContent = new javax.swing.JTextArea();
        jPanelOperations = new javax.swing.JPanel();
        jButtonUpdateBlog = new javax.swing.JButton();
        jButtonCreateNewBlog = new javax.swing.JButton();
        jButtonShowUserInfo = new javax.swing.JButton();
        jButtonUserOperations = new javax.swing.JButton();
        jButtonDeleteThisBlog = new javax.swing.JButton();
        jButtonDeleteAllBlogs = new javax.swing.JButton();
        jButtonShowAllComments = new javax.swing.JButton();
        jButtonCreateNewComment = new javax.swing.JButton();
        jButtonDeleteAllComments = new javax.swing.JButton();
        jButtonDeleteAllCommentsThisBlog = new javax.swing.JButton();
        jPanelBlog = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxBlogList = new javax.swing.JComboBox();
        jMenuBar = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuAppearance = new javax.swing.JMenu();
        jMenuItemMetal = new javax.swing.JMenuItem();
        jMenuItemNimbus = new javax.swing.JMenuItem();
        jMenuItemWindowsXP = new javax.swing.JMenuItem();
        jMenuItemWindowsClassic = new javax.swing.JMenuItem();
        jMenuHelp = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Blog Yöneticisi");
        setName("Form"); // NOI18N

        jPanelBlogInformation.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanelBlogInformation.setName("jPanelBlogInformation"); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Blog Başlığı :");
        jLabel2.setName("jLabel2"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTextAreaBlogTitle.setColumns(10);
        jTextAreaBlogTitle.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTextAreaBlogTitle.setLineWrap(true);
        jTextAreaBlogTitle.setRows(4);
        jTextAreaBlogTitle.setWrapStyleWord(true);
        jTextAreaBlogTitle.setName("jTextAreaBlogTitle"); // NOI18N
        jScrollPane1.setViewportView(jTextAreaBlogTitle);

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("İçerik :");
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jLabel4.setText("Bloğun Sahibi : ");
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jLabel5.setText("Oluşturulma Tarihi : ");
        jLabel5.setName("jLabel5"); // NOI18N

        jLabel6.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jLabel6.setText("Blog Sayısı : ");
        jLabel6.setName("jLabel6"); // NOI18N

        jLabel7.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jLabel7.setText("Yorum Sayısı : ");
        jLabel7.setName("jLabel7"); // NOI18N

        jLabelOwner.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jLabelOwner.setText("...");
        jLabelOwner.setName("jLabelOwner"); // NOI18N

        jLabelCreatedDate.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jLabelCreatedDate.setText("...");
        jLabelCreatedDate.setName("jLabelCreatedDate"); // NOI18N

        jLabelArticleCount.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jLabelArticleCount.setText("...");
        jLabelArticleCount.setName("jLabelArticleCount"); // NOI18N

        jLabelCommentCount.setFont(new java.awt.Font("Arial", 0, 13)); // NOI18N
        jLabelCommentCount.setText("...");
        jLabelCommentCount.setName("jLabelCommentCount"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTextAreaBlogContent.setColumns(20);
        jTextAreaBlogContent.setLineWrap(true);
        jTextAreaBlogContent.setRows(5);
        jTextAreaBlogContent.setWrapStyleWord(true);
        jTextAreaBlogContent.setName("jTextAreaBlogContent"); // NOI18N
        jScrollPane2.setViewportView(jTextAreaBlogContent);

        javax.swing.GroupLayout jPanelBlogInformationLayout = new javax.swing.GroupLayout(jPanelBlogInformation);
        jPanelBlogInformation.setLayout(jPanelBlogInformationLayout);
        jPanelBlogInformationLayout.setHorizontalGroup(
            jPanelBlogInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBlogInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBlogInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelBlogInformationLayout.createSequentialGroup()
                        .addGroup(jPanelBlogInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelBlogInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelOwner)
                            .addComponent(jLabelCreatedDate)
                            .addComponent(jLabelArticleCount)
                            .addComponent(jLabelCommentCount))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelBlogInformationLayout.createSequentialGroup()
                        .addGroup(jPanelBlogInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(14, 14, 14)
                        .addGroup(jPanelBlogInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanelBlogInformationLayout.setVerticalGroup(
            jPanelBlogInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBlogInformationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBlogInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelBlogInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBlogInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabelOwner))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBlogInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabelCreatedDate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBlogInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabelArticleCount))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelBlogInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabelCommentCount))
                .addContainerGap())
        );

        getContentPane().add(jPanelBlogInformation, java.awt.BorderLayout.CENTER);

        jPanelOperations.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanelOperations.setToolTipText("");
        jPanelOperations.setName(""); // NOI18N

        jButtonUpdateBlog.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonUpdateBlog.setText("Bloğu Güncelle");
        jButtonUpdateBlog.setEnabled(false);
        jButtonUpdateBlog.setName("jButtonUpdateBlog"); // NOI18N
        jButtonUpdateBlog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateBlogActionPerformed(evt);
            }
        });

        jButtonCreateNewBlog.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonCreateNewBlog.setText("Yeni Blog Oluştur");
        jButtonCreateNewBlog.setName("jButtonCreateNewBlog"); // NOI18N
        jButtonCreateNewBlog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateNewBlogActionPerformed(evt);
            }
        });

        jButtonShowUserInfo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonShowUserInfo.setText("Kullanıcı Bilgisini Görüntüle");
        jButtonShowUserInfo.setEnabled(false);
        jButtonShowUserInfo.setName("jButtonShowUserInfo"); // NOI18N
        jButtonShowUserInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowUserInfoActionPerformed(evt);
            }
        });

        jButtonUserOperations.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonUserOperations.setText("Kullanıcı İşlemleri");
        jButtonUserOperations.setName("jButtonUserOperations"); // NOI18N
        jButtonUserOperations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUserOperationsActionPerformed(evt);
            }
        });

        jButtonDeleteThisBlog.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonDeleteThisBlog.setText("Bloğu Sil");
        jButtonDeleteThisBlog.setEnabled(false);
        jButtonDeleteThisBlog.setName("jButtonDeleteThisBlog"); // NOI18N
        jButtonDeleteThisBlog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteThisBlogActionPerformed(evt);
            }
        });

        jButtonDeleteAllBlogs.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonDeleteAllBlogs.setText("Tüm Blogları Sil");
        jButtonDeleteAllBlogs.setEnabled(false);
        jButtonDeleteAllBlogs.setName("jButtonDeleteAllBlogs"); // NOI18N
        jButtonDeleteAllBlogs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteAllBlogsActionPerformed(evt);
            }
        });

        jButtonShowAllComments.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonShowAllComments.setText("Yorumları Göster");
        jButtonShowAllComments.setEnabled(false);
        jButtonShowAllComments.setName("jButtonShowAllComments"); // NOI18N
        jButtonShowAllComments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonShowAllCommentsActionPerformed(evt);
            }
        });

        jButtonCreateNewComment.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonCreateNewComment.setText("Yorum Yap");
        jButtonCreateNewComment.setEnabled(false);
        jButtonCreateNewComment.setName("jButtonCreateNewComment"); // NOI18N
        jButtonCreateNewComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateNewCommentActionPerformed(evt);
            }
        });

        jButtonDeleteAllComments.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonDeleteAllComments.setText("Tüm Yorumları Sil");
        jButtonDeleteAllComments.setEnabled(false);
        jButtonDeleteAllComments.setName("jButtonDeleteAllComments"); // NOI18N
        jButtonDeleteAllComments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteAllCommentsActionPerformed(evt);
            }
        });

        jButtonDeleteAllCommentsThisBlog.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonDeleteAllCommentsThisBlog.setText("Blogdaki Yorumları Sil");
        jButtonDeleteAllCommentsThisBlog.setEnabled(false);
        jButtonDeleteAllCommentsThisBlog.setName("jButtonDeleteAllCommentsThisBlog"); // NOI18N
        jButtonDeleteAllCommentsThisBlog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteAllCommentsThisBlogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelOperationsLayout = new javax.swing.GroupLayout(jPanelOperations);
        jPanelOperations.setLayout(jPanelOperationsLayout);
        jPanelOperationsLayout.setHorizontalGroup(
            jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOperationsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonUpdateBlog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDeleteThisBlog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonShowUserInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonShowAllComments, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDeleteAllCommentsThisBlog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonDeleteAllComments, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDeleteAllBlogs, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonUserOperations, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCreateNewBlog, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                    .addComponent(jButtonCreateNewComment, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelOperationsLayout.setVerticalGroup(
            jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOperationsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonUpdateBlog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCreateNewBlog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDeleteThisBlog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDeleteAllBlogs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonShowAllComments, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonCreateNewComment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDeleteAllComments, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDeleteAllCommentsThisBlog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelOperationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonShowUserInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonUserOperations, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelOperations, java.awt.BorderLayout.PAGE_END);

        jPanelBlog.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanelBlog.setName(""); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Blog Seçin :");
        jLabel1.setName("jLabel1"); // NOI18N

        jComboBoxBlogList.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jComboBoxBlogList.setName("jComboBoxBlogList"); // NOI18N
        jComboBoxBlogList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxBlogListItemStateChanged(evt);
            }
        });
        jComboBoxBlogList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBlogListActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelBlogLayout = new javax.swing.GroupLayout(jPanelBlog);
        jPanelBlog.setLayout(jPanelBlogLayout);
        jPanelBlogLayout.setHorizontalGroup(
            jPanelBlogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBlogLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxBlogList, 0, 300, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelBlogLayout.setVerticalGroup(
            jPanelBlogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelBlogLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelBlogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxBlogList))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelBlog, java.awt.BorderLayout.PAGE_START);

        jMenuBar.setName("jMenuBar"); // NOI18N

        jMenuFile.setText("Dosya");
        jMenuFile.setName("jMenuFile"); // NOI18N

        jMenuItemExit.setText("Çıkış");
        jMenuItemExit.setName("jMenuItemExit"); // NOI18N
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar.add(jMenuFile);

        jMenuAppearance.setText("Görünüm");
        jMenuAppearance.setName("jMenuAppearance"); // NOI18N

        jMenuItemMetal.setText("Metal");
        jMenuItemMetal.setName("jMenuItemMetal"); // NOI18N
        jMenuItemMetal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMetalActionPerformed(evt);
            }
        });
        jMenuAppearance.add(jMenuItemMetal);

        jMenuItemNimbus.setText("Nimbus");
        jMenuItemNimbus.setName("jMenuItemNimbus"); // NOI18N
        jMenuItemNimbus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemNimbusActionPerformed(evt);
            }
        });
        jMenuAppearance.add(jMenuItemNimbus);

        jMenuItemWindowsXP.setText("Windows");
        jMenuItemWindowsXP.setName("jMenuItemWindowsXP"); // NOI18N
        jMenuItemWindowsXP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemWindowsXPActionPerformed(evt);
            }
        });
        jMenuAppearance.add(jMenuItemWindowsXP);

        jMenuItemWindowsClassic.setText("Windows Classic");
        jMenuItemWindowsClassic.setName("jMenuItemWindowsClassic"); // NOI18N
        jMenuItemWindowsClassic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemWindowsClassicActionPerformed(evt);
            }
        });
        jMenuAppearance.add(jMenuItemWindowsClassic);

        jMenuBar.add(jMenuAppearance);

        jMenuHelp.setText("Yardım");
        jMenuHelp.setName("jMenuHelp"); // NOI18N

        jMenuItemAbout.setText("Hakkında");
        jMenuItemAbout.setName("jMenuItemAbout"); // NOI18N
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenuHelp.add(jMenuItemAbout);

        jMenuBar.add(jMenuHelp);

        setJMenuBar(jMenuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jMenuItemMetalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMetalActionPerformed
        setLookAndFeel(METAL_LOOK_AND_FEEL);
        setAppearance();
    }//GEN-LAST:event_jMenuItemMetalActionPerformed

    private void jMenuItemNimbusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemNimbusActionPerformed
        setLookAndFeel(NIMBUS_LOOK_AND_FEEL);
        setAppearance();
    }//GEN-LAST:event_jMenuItemNimbusActionPerformed

    private void jMenuItemWindowsXPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemWindowsXPActionPerformed
        setLookAndFeel(WINDOWS_LOOK_AND_FEEL);
        setAppearance();
    }//GEN-LAST:event_jMenuItemWindowsXPActionPerformed

    private void jMenuItemWindowsClassicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemWindowsClassicActionPerformed
        setLookAndFeel(WINDOWS_CLASSIC_LOOK_AND_FEEL);
        setAppearance();
    }//GEN-LAST:event_jMenuItemWindowsClassicActionPerformed

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
        AboutJDialog aboutJDialog = new AboutJDialog(this, rootPaneCheckingEnabled);
        aboutJDialog.setVisible(true);
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    private void jComboBoxBlogListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBlogListActionPerformed
        if (jComboBoxBlogList.getItemCount() > 1) {
            if (jComboBoxBlogList.getSelectedIndex() == 0
                    || jComboBoxBlogList.getSelectedIndex() == -1) {
                deactivateButtons();
            } else {
                try {
                    activateButtons();
                } catch (Exception ex) {
                    Utilities.showMessageBox("Hata: " + ex.getMessage(), "ERROR");
                }
            }
        }
    }//GEN-LAST:event_jComboBoxBlogListActionPerformed

    private void jComboBoxBlogListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxBlogListItemStateChanged
        selectedItem = jComboBoxBlogList.getSelectedItem().toString();
        if (selectedItem.equals("Seçiniz")) {
            clearForm();
            return;
        }

        Blog selectedBlog = getSelectedBlog(selectedItem);
        try {
            databaseOperations.getDBConnection();
            selectedBlogDetail = databaseOperations.getBlogDetail(selectedBlog.getBlogID());

            int articleCount = databaseOperations.getAllBlogsBelongToUser(
                    databaseOperations.getUserInfo(selectedBlog.getUserID())).size();
            selectedBlogDetail.setArticleCount(articleCount);

            databaseOperations.dbConnectionClose();
        } catch (Exception ex) {
            Utilities.showMessageBox("Hata: " + ex.getMessage(), "ERROR");
        }

        jTextAreaBlogTitle.setText(selectedBlog.getBlogTitle());
        jTextAreaBlogContent.setText(selectedBlog.getDescription());
        jLabelCreatedDate.setText(Utilities.showDateTime(selectedBlog.getCreateDate()));
        jLabelOwner.setText(selectedBlogDetail.getUser().getUserName());
        jLabelArticleCount.setText(Integer.toString(selectedBlogDetail.getArticleCount()));
        jLabelCommentCount.setText(Integer.toString(selectedBlogDetail.getCommentCount()));

    }//GEN-LAST:event_jComboBoxBlogListItemStateChanged

    private void jButtonDeleteAllCommentsThisBlogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteAllCommentsThisBlogActionPerformed
        try {
            databaseOperations.getDBConnection();
            List<Comment> comments = databaseOperations.getAllCommentsBelongToBlog(selectedBlogDetail);
            for (Comment comment : comments) {
                databaseOperations.deleteComment(comment);
            }
            getData();
            databaseOperations.dbConnectionClose();
        } catch (Exception ex) {
            Utilities.showMessageBox("Hata: " + ex.getMessage(), "ERROR");
        }
    }//GEN-LAST:event_jButtonDeleteAllCommentsThisBlogActionPerformed

    private void jButtonDeleteAllCommentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteAllCommentsActionPerformed
        int result = Utilities.askQuestion("Tüm Yorumları Sil", "Tüm bloglardaki yorumlar silinsin mi?");
        if (result == 0) {
            deleteAllComments();
        }
    }//GEN-LAST:event_jButtonDeleteAllCommentsActionPerformed

    private void jButtonCreateNewCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateNewCommentActionPerformed
        CreateNewCommentJDialog commentJDialog = new CreateNewCommentJDialog(this,
                rootPaneCheckingEnabled, selectedBlogDetail);

        if (commentJDialog.isCommentCreated()) {
            getData();
        }
    }//GEN-LAST:event_jButtonCreateNewCommentActionPerformed

    private void jButtonShowAllCommentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowAllCommentsActionPerformed
        ViewAllCommentsJDialog commentsJDialog = new ViewAllCommentsJDialog(this, rootPaneCheckingEnabled);
        commentsJDialog.setVisible(true);
    }//GEN-LAST:event_jButtonShowAllCommentsActionPerformed

    private void jButtonDeleteAllBlogsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteAllBlogsActionPerformed
        int result = Utilities.askQuestion("Tüm Blogları Sil", "Tüm bloglar ve yorumlar silinsin mi?");
        if (result == 0) {
            deleteBlog("Many");
            deactivateButtons();
            clearForm();
        }
    }//GEN-LAST:event_jButtonDeleteAllBlogsActionPerformed

    private void jButtonDeleteThisBlogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteThisBlogActionPerformed
        int result = Utilities.askQuestion("Bloğu Sil", "Bu blog silinsin mi?");
        if (result == 0) {
            deleteBlog("Only");
            clearForm();
        }
    }//GEN-LAST:event_jButtonDeleteThisBlogActionPerformed

    private void jButtonUserOperationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUserOperationsActionPerformed
        UserOperationsJDialog operationsJDialog = new UserOperationsJDialog(this, rootPaneCheckingEnabled);
        operationsJDialog.setVisible(true);
    }//GEN-LAST:event_jButtonUserOperationsActionPerformed

    private void jButtonShowUserInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonShowUserInfoActionPerformed
        ViewUserInformationsJDialog informationJDialog = new ViewUserInformationsJDialog(this,
                rootPaneCheckingEnabled, selectedBlogDetail);
        informationJDialog.setVisible(true);
    }//GEN-LAST:event_jButtonShowUserInfoActionPerformed

    private void jButtonCreateNewBlogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateNewBlogActionPerformed
        CreateNewBlogJDialog blogJDialog = new CreateNewBlogJDialog(this, rootPaneCheckingEnabled);

        if (blogJDialog.isBlogCreated()) {
            getData();
        }
    }//GEN-LAST:event_jButtonCreateNewBlogActionPerformed

    private void jButtonUpdateBlogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateBlogActionPerformed
        int selectBlogIndex = jComboBoxBlogList.getSelectedIndex();
        String blogTitle = jTextAreaBlogTitle.getText();
        String blogDescription = jTextAreaBlogContent.getText();

        selectedBlogDetail.setBlogTitle(blogTitle);
        selectedBlogDetail.setDescription(blogDescription);

        try {
            databaseOperations.getDBConnection();
            databaseOperations.updateBlogInfo(selectedBlogDetail);
            getData();
            jComboBoxBlogList.setSelectedIndex(selectBlogIndex);
            databaseOperations.dbConnectionClose();

            Utilities.showMessageBox("Blog güncellendi.", "INFORMATION");
        } catch (Exception ex) {
            Utilities.showMessageBox("Hata: " + ex.getMessage(), "ERROR");
        }
    }//GEN-LAST:event_jButtonUpdateBlogActionPerformed

    public String getLookAndFeel() {
        return lookAndFeel;
    }

    private void setLookAndFeel(String lookAndFeel) {
        this.lookAndFeel = lookAndFeel;
    }

    private void setAppearance() {
        try {
            UIManager.setLookAndFeel(getLookAndFeel());
        } catch (ClassNotFoundException | InstantiationException |
                IllegalAccessException | UnsupportedLookAndFeelException ex) {
            Utilities.showMessageBox("Hata: " + ex.getMessage(), "ERROR");

        } finally {
            updateUI();
        }
    }

    private void updateUI() {
        SwingUtilities.updateComponentTreeUI(this);
        this.pack();
    }

    private void getData() {
        try {
            clearForm();

            databaseOperations.getDBConnection();
            blogList = databaseOperations.getAllBlogs();

            if (blogList == null) {
                jComboBoxBlogList.removeAllItems();
                return;
            }
            jComboBoxBlogList.setModel(new DefaultComboBoxModel());

            if (blogList.size() > 0) {
                jComboBoxBlogList.addItem("Seçiniz");
                for (Blog blog : blogList) {
                    jComboBoxBlogList.addItem(blog.getBlogTitle()
                            + "   "
                            + Utilities.showDateTime(blog.getCreateDate()));
                }
                jButtonDeleteAllBlogs.setEnabled(true);
            }
            databaseOperations.dbConnectionClose();
        } catch (Exception ex) {
            if (blogList != null) {
                Utilities.showMessageBox("Hata: " + ex.getMessage(), "ERROR");
            }
        }
    }

    private void deleteBlog(String howMuch) {
        try {
            databaseOperations.getDBConnection();

            switch (howMuch) {
                case "Only":
                    databaseOperations.deleteBlog(selectedBlogDetail);
                    break;

                case "Many":
                    if (blogList == null) {
                        blogList = databaseOperations.getAllBlogs();
                    }

                    for (Blog blog : blogList) {
                        databaseOperations.deleteBlog(blog);
                    }

                    blogList = null;
                    break;
            }

            databaseOperations.dbConnectionClose();
            getData();
        } catch (Exception ex) {
            Utilities.showMessageBox("Hata: " + ex.getMessage(), "ERROR");
        }
    }

    private Blog getSelectedBlog(String blogTitle) {
        if (blogTitle != null) {

            for (Blog blog : blogList) {
                if (blogTitle.contains(blog.getBlogTitle())) {
                    return blog;
                }
            }
        }
        return null;
    }

    private void clearForm() {
        jTextAreaBlogContent.setText("");
        jTextAreaBlogTitle.setText("");
        jLabelOwner.setText("");
        jLabelArticleCount.setText("");
        jLabelCommentCount.setText("");
        jLabelCreatedDate.setText("");
    }

    private void deleteAllComments() {
        try {
            if (checkComments()) {
                databaseOperations.getDBConnection();
                for (Comment comment : commentList) {
                    databaseOperations.deleteComment(comment);
                }
                commentList = null;
                databaseOperations.dbConnectionClose();
                getData();
            }

        } catch (Exception ex) {
            Utilities.showMessageBox("Hata: " + ex.getMessage(), "ERROR");
        }
    }

    private boolean checkComments() {
        boolean result = false;

        try {
            databaseOperations.getDBConnection();
            if (commentList == null) {
                commentList = databaseOperations.getAllComments();
            }

            if (commentList != null) {
                result = commentList.size() > 0;
            }
            databaseOperations.dbConnectionClose();
        } catch (Exception ex) {
            Utilities.showMessageBox("Hata: " + ex.getMessage(), "ERROR");
        }
        return result;
    }

    private void activateButtons() {
        jButtonDeleteThisBlog.setEnabled(true);
        jButtonDeleteAllBlogs.setEnabled(true);
        jButtonShowUserInfo.setEnabled(true);
        jButtonUpdateBlog.setEnabled(true);
        jButtonCreateNewComment.setEnabled(true);

        if (checkComments()) {
            jButtonDeleteAllComments.setEnabled(true);
            jButtonDeleteAllCommentsThisBlog.setEnabled(true);
            jButtonShowAllComments.setEnabled(true);
        }
    }

    private void deactivateButtons() {
        jButtonDeleteThisBlog.setEnabled(false);
        jButtonDeleteAllBlogs.setEnabled(false);
        jButtonShowUserInfo.setEnabled(false);
        jButtonDeleteAllCommentsThisBlog.setEnabled(false);
        jButtonUpdateBlog.setEnabled(false);
        jButtonCreateNewComment.setEnabled(false);
        jButtonDeleteAllComments.setEnabled(false);
        jButtonShowAllComments.setEnabled(false);
    }

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                BlogManager blogManager = new BlogManager();
                blogManager.setLookAndFeel(NIMBUS_LOOK_AND_FEEL);
                blogManager.setAppearance();
                blogManager.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCreateNewBlog;
    private javax.swing.JButton jButtonCreateNewComment;
    private javax.swing.JButton jButtonDeleteAllBlogs;
    private javax.swing.JButton jButtonDeleteAllComments;
    private javax.swing.JButton jButtonDeleteAllCommentsThisBlog;
    private javax.swing.JButton jButtonDeleteThisBlog;
    private javax.swing.JButton jButtonShowAllComments;
    private javax.swing.JButton jButtonShowUserInfo;
    private javax.swing.JButton jButtonUpdateBlog;
    private javax.swing.JButton jButtonUserOperations;
    private javax.swing.JComboBox jComboBoxBlogList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabelArticleCount;
    private javax.swing.JLabel jLabelCommentCount;
    private javax.swing.JLabel jLabelCreatedDate;
    private javax.swing.JLabel jLabelOwner;
    private javax.swing.JMenu jMenuAppearance;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuHelp;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemMetal;
    private javax.swing.JMenuItem jMenuItemNimbus;
    private javax.swing.JMenuItem jMenuItemWindowsClassic;
    private javax.swing.JMenuItem jMenuItemWindowsXP;
    private javax.swing.JPanel jPanelBlog;
    private javax.swing.JPanel jPanelBlogInformation;
    private javax.swing.JPanel jPanelOperations;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaBlogContent;
    private javax.swing.JTextArea jTextAreaBlogTitle;
    // End of variables declaration//GEN-END:variables
}
