/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package blogmanager.view;

import blogmanager.database.DatabaseOperations;
import blogmanager.genel.Utilities;
import blogmanager.model.Blog;
import blogmanager.model.User;
import java.util.List;

/**
 *
 * @author Rahman Yazgan
 */
public class CreateNewBlogJDialog extends javax.swing.JDialog {

    private final DatabaseOperations databaseOperations;
    private List<User> userList;
    private String tempUser;
    private User selectedUser;
    private boolean blogCreated;

    /**
     * Creates new form CreateNewBlogJDialog
     *
     * @param parent
     * @param modal
     */
    public CreateNewBlogJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        // The main window (Blog Manager) was positioned to work on.
        this.setLocationRelativeTo(parent);

        databaseOperations = new DatabaseOperations();

        // Getting the necessary datas for the form.
        getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaBlogTitle = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaBlogContent = new javax.swing.JTextArea();
        jComboBoxUserList = new javax.swing.JComboBox();
        jButtonCreateNewBlog = new javax.swing.JButton();

        setTitle("Blog Oluştur");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Yazı Başlığı :");

        jTextAreaBlogTitle.setColumns(10);
        jTextAreaBlogTitle.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTextAreaBlogTitle.setLineWrap(true);
        jTextAreaBlogTitle.setRows(4);
        jTextAreaBlogTitle.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextAreaBlogTitle);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("İçerik :");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Bloğun Sahibi : ");

        jTextAreaBlogContent.setColumns(20);
        jTextAreaBlogContent.setLineWrap(true);
        jTextAreaBlogContent.setRows(5);
        jTextAreaBlogContent.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextAreaBlogContent);

        jComboBoxUserList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxUserListItemStateChanged(evt);
            }
        });

        jButtonCreateNewBlog.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButtonCreateNewBlog.setText("Blog Oluştur");
        jButtonCreateNewBlog.setEnabled(false);
        jButtonCreateNewBlog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCreateNewBlogActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonCreateNewBlog, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(14, 14, 14))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBoxUserList, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                            .addComponent(jScrollPane2))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxUserList, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonCreateNewBlog, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Getting the necessary datas from the database for ComboBox
     */
    private void getData() {
        getAllUsers();

        if (addUsers()) {
            this.setVisible(true);
        } else {
            this.setVisible(false);
        }
    }

    private void getAllUsers() {
        try {
            databaseOperations.getDBConnection();
            userList = databaseOperations.getAllUsers();
            databaseOperations.dbConnectionClose();
        } catch (Exception ex) {
            Utilities.showMessageBox("Hata: " + ex.getMessage(), "ERROR");
        }
    }

    private boolean addUsers() {
        if (userList != null) {
            if (userList.size() > 0) {

                jComboBoxUserList.addItem("Seçiniz");

                for (User user : userList) {
                    if (user.getAccessPermission().equals("A")
                            || user.getAccessPermission().equals("Y")) {
                        jComboBoxUserList.addItem(user.getUserName()
                                + " <" + user.getEmail() + ">");
                    }
                }
                return true;
            }
        } else {
            Utilities.showMessageBox("Blog oluşturabilmek için Kullanıcı İşlemleri kısmından\n "
                    + "Yazar/Yönetici rolünde yeni bir kullanıcı ekleyiniz.", "INFORMATION");
        }
        return false;
    }

    private void jButtonCreateNewBlogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCreateNewBlogActionPerformed
        if (checkInformationPlaces()) {
            createNewBlog();
        }
    }//GEN-LAST:event_jButtonCreateNewBlogActionPerformed

    private boolean checkInformationPlaces() {
        if (jTextAreaBlogTitle.getText().trim().length() == 0) {
            Utilities.showMessageBox("Blog başlığı boş olamaz.", "ERROR");
            return false;
        }
        if (jTextAreaBlogContent.getText().trim().length() == 0) {
            Utilities.showMessageBox("Blog içeriği boş olamaz.", "ERROR");
            return false;
        }
        if (jComboBoxUserList.getSelectedItem().toString().equals("Seçiniz")) {
            Utilities.showMessageBox("Bir kullanıcı seçiniz.", "ERROR");
            return false;
        }

        return true;
    }

    private void createNewBlog() {
        Blog blog = new Blog();
        blog.setBlogTitle(jTextAreaBlogTitle.getText());
        blog.setDescription(jTextAreaBlogContent.getText());
        blog.setUserID(selectedUser.getUserID());
        blog.setCreateDate(Utilities.createNewTimestamp());

        try {
            databaseOperations.getDBConnection();
            databaseOperations.createBlog(blog);
            databaseOperations.dbConnectionClose();

            Utilities.showMessageBox("Blog oluşturuldu.", "INFORMATION");
            blogCreated = true;
        } catch (Exception ex) {
            Utilities.showMessageBox("Hata: " + ex.getMessage(), "ERROR");
            blogCreated = false;
        }

        clearForm();
    }

    public boolean isBlogCreated() {
        return blogCreated;
    }

    private void clearForm() {
        jTextAreaBlogTitle.setText("");
        jTextAreaBlogContent.setText("");
    }

    private void jComboBoxUserListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxUserListItemStateChanged
        selectActiveUser();
        activateButton();
    }//GEN-LAST:event_jComboBoxUserListItemStateChanged

    private void activateButton() {
        if (jComboBoxUserList.getSelectedIndex() > 0) {
            jButtonCreateNewBlog.setEnabled(true);
        } else {
            jButtonCreateNewBlog.setEnabled(false);
        }
    }

    private void selectActiveUser() {
        if (userList != null) {
            tempUser = jComboBoxUserList.getSelectedItem().toString();

            for (User user : userList) {
                if (tempUser.contains(user.getEmail())) {
                    selectedUser = user;
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCreateNewBlog;
    private javax.swing.JComboBox jComboBoxUserList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaBlogContent;
    private javax.swing.JTextArea jTextAreaBlogTitle;
    // End of variables declaration//GEN-END:variables
}
